#!/bin/bash

# OpenStack Swift prompt helper for bash/zsh
# Displays current username and project/tenant

# Copyright 2019 Khosrow Moossavi
#
#  Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Debug
[[ -n $DEBUG ]] && set -x

# Default values for the prompt
# Override these values in ~/.zshrc or ~/.bashrc
SWIFT_PS1_PREFIX="${SWIFT_PS1_PREFIX-(}"
SWIFT_PS1_SEPARATOR="${SWIFT_PS1_SEPARATOR-|}"
SWIFT_PS1_DIVIDER="${SWIFT_PS1_DIVIDER-:}"
SWIFT_PS1_SUFFIX="${SWIFT_PS1_SUFFIX-)}"
SWIFT_PS1_SYSTEM_COLOR="${SWIFT_PS1_SYSTEM_COLOR-blue}"
SWIFT_PS1_USER_COLOR="${SWIFT_PS1_USER_COLOR-red}"
SWIFT_PS1_TENANT_COLOR="${SWIFT_PS1_TENANT_COLOR-cyan}"
SWIFT_PS1_BG_COLOR="${SWIFT_PS1_BG_COLOR}"
SWIFT_PS1_DISABLE_PATH="${HOME}/.swift/swift-ps1/disabled"
# shellcheck disable=SC2034
SWIFT_PS1_LAST_TIME=0

# Determine our shell
if [ "${ZSH_VERSION-}" ]; then
  SWIFT_PS1_SHELL="zsh"
elif [ "${BASH_VERSION-}" ]; then
  SWIFT_PS1_SHELL="bash"
fi

_swift_ps1_init() {
  [[ -f "${SWIFT_PS1_DISABLE_PATH}" ]] && SWIFT_PS1_ENABLED=off

  case "${SWIFT_PS1_SHELL}" in
    "zsh")
      _SWIFT_PS1_OPEN_ESC="%{"
      _SWIFT_PS1_CLOSE_ESC="%}"
      _SWIFT_PS1_DEFAULT_BG="%k"
      _SWIFT_PS1_DEFAULT_FG="%f"
      setopt PROMPT_SUBST
      autoload -U add-zsh-hook
      zmodload -F zsh/stat b:zstat
      zmodload zsh/datetime
      ;;
    "bash")
      _SWIFT_PS1_OPEN_ESC=$'\001'
      _SWIFT_PS1_CLOSE_ESC=$'\002'
      _SWIFT_PS1_DEFAULT_BG=$'\033[49m'
      _SWIFT_PS1_DEFAULT_FG=$'\033[39m'
      ;;
  esac
}

_swift_ps1_color_fg() {
  local SWIFT_PS1_FG_CODE
  case "${1}" in
    black) SWIFT_PS1_FG_CODE=0;;
    red) SWIFT_PS1_FG_CODE=1;;
    green) SWIFT_PS1_FG_CODE=2;;
    yellow) SWIFT_PS1_FG_CODE=3;;
    blue) SWIFT_PS1_FG_CODE=4;;
    magenta) SWIFT_PS1_FG_CODE=5;;
    cyan) SWIFT_PS1_FG_CODE=6;;
    white) SWIFT_PS1_FG_CODE=7;;
    # 256
    [0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-6]) SWIFT_PS1_FG_CODE="${1}";;
    *) SWIFT_PS1_FG_CODE=default
  esac

  if [[ "${SWIFT_PS1_FG_CODE}" == "default" ]]; then
    SWIFT_PS1_FG_CODE="${_SWIFT_PS1_DEFAULT_FG}"
    return
  elif [[ "${SWIFT_PS1_SHELL}" == "zsh" ]]; then
    SWIFT_PS1_FG_CODE="%F{$SWIFT_PS1_FG_CODE}"
  elif [[ "${SWIFT_PS1_SHELL}" == "bash" ]]; then
    if tput setaf 1 &> /dev/null; then
      SWIFT_PS1_FG_CODE="$(tput setaf ${SWIFT_PS1_FG_CODE})"
    elif [[ $SWIFT_PS1_FG_CODE -ge 0 ]] && [[ $SWIFT_PS1_FG_CODE -le 256 ]]; then
      SWIFT_PS1_FG_CODE="\033[38;5;${SWIFT_PS1_FG_CODE}m"
    else
      SWIFT_PS1_FG_CODE="${_SWIFT_PS1_DEFAULT_FG}"
    fi
  fi
  echo ${_SWIFT_PS1_OPEN_ESC}${SWIFT_PS1_FG_CODE}${_SWIFT_PS1_CLOSE_ESC}
}

_swift_ps1_color_bg() {
  local SWIFT_PS1_BG_CODE
  case "${1}" in
    black) SWIFT_PS1_BG_CODE=0;;
    red) SWIFT_PS1_BG_CODE=1;;
    green) SWIFT_PS1_BG_CODE=2;;
    yellow) SWIFT_PS1_BG_CODE=3;;
    blue) SWIFT_PS1_BG_CODE=4;;
    magenta) SWIFT_PS1_BG_CODE=5;;
    cyan) SWIFT_PS1_BG_CODE=6;;
    white) SWIFT_PS1_BG_CODE=7;;
    # 256
    [0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-6]) SWIFT_PS1_BG_CODE="${1}";;
    *) SWIFT_PS1_BG_CODE=$'\033[0m';;
  esac

  if [[ "${SWIFT_PS1_BG_CODE}" == "default" ]]; then
    SWIFT_PS1_FG_CODE="${_SWIFT_PS1_DEFAULT_BG}"
    return
  elif [[ "${SWIFT_PS1_SHELL}" == "zsh" ]]; then
    SWIFT_PS1_BG_CODE="%K{$SWIFT_PS1_BG_CODE}"
  elif [[ "${SWIFT_PS1_SHELL}" == "bash" ]]; then
    if tput setaf 1 &> /dev/null; then
      SWIFT_PS1_BG_CODE="$(tput setab ${SWIFT_PS1_BG_CODE})"
    elif [[ $SWIFT_PS1_BG_CODE -ge 0 ]] && [[ $SWIFT_PS1_BG_CODE -le 256 ]]; then
      SWIFT_PS1_BG_CODE="\033[48;5;${SWIFT_PS1_BG_CODE}m"
    else
      SWIFT_PS1_BG_CODE="${DEFAULT_BG}"
    fi
  fi
  echo "${OPEN_ESC}""${SWIFT_PS1_BG_CODE}""${CLOSE_ESC}"
}

# Set swift-ps1 shell defaults
_swift_ps1_init

unsource_swift() {
  # v2, v3 common
  unset OS_AUTH_URL
  unset OS_PASSWORD
  unset OS_PROJECT_NAME
  unset OS_USERNAME

  # v2 only
  unset OS_TENANT_NAME

  # v3 only
  unset OS_IDENTITY_API_VERSION
  unset OS_INTERFACE
  unset OS_PROJECT_DOMAIN_ID
  unset OS_USER_DOMAIN_ID
}

# Build our prompt
_swift_ps1() {
  [[ "${SWIFT_PS1_ENABLED}" == "off" ]] && return
  [[ -z "${OS_PROJECT_NAME}" ]] && [[ -z "${OS_TENANT_NAME}" ]] && [[ -z "${OS_USERNAME}" ]] && return

  local SWIFT_PS1
  local SWIFT_PS1_RESET_COLOR="${_SWIFT_PS1_OPEN_ESC}${_SWIFT_PS1_DEFAULT_FG}${_SWIFT_PS1_CLOSE_ESC}"

  local LOCAL_SYSTEM_NAME=""
  local LOCAL_TENANT_NAME=""
  local LOCAL_USER_NAME=""

  if [[ -n "${OS_PROJECT_NAME}" ]]; then
    LOCAL_TENANT_NAME="${OS_PROJECT_NAME}"
  elif [[ -n "${OS_TENANT_NAME}" ]]; then
    LOCAL_TENANT_NAME="${OS_TENANT_NAME}"
  fi

  LOCAL_SYSTEM_NAME=$(echo "${LOCAL_TENANT_NAME}" | cut -d- -f1)
  LOCAL_TENANT_NAME=$(echo "${LOCAL_TENANT_NAME}" | cut -d- -f2)
  LOCAL_USER_NAME=$(echo "${OS_USERNAME}" | cut -d- -f2)

  # Background Color
  [[ -n "${SWIFT_PS1_BG_COLOR}" ]] && SWIFT_PS1+="$(_swift_ps1_color_bg "${SWIFT_PS1_BG_COLOR}")"

  # Prefix
  [[ -n "${SWIFT_PS1_PREFIX}" ]] && SWIFT_PS1+="${SWIFT_PS1_PREFIX}"

  # System
  SWIFT_PS1+="$(_kube_ps1_color_fg "$SWIFT_PS1_SYSTEM_COLOR")${LOCAL_SYSTEM_NAME}${SWIFT_PS1_RESET_COLOR}"
  SWIFT_PS1+="${SWIFT_PS1_SEPARATOR}"

  # Username
  SWIFT_PS1+="$(_kube_ps1_color_fg "$SWIFT_PS1_USER_COLOR")${LOCAL_USER_NAME}${SWIFT_PS1_RESET_COLOR}"
  SWIFT_PS1+="${SWIFT_PS1_DIVIDER}"

  # Project / Tenant
  SWIFT_PS1+="$(_swift_ps1_color_fg "${SWIFT_PS1_TENANT_COLOR}")${LOCAL_TENANT_NAME}${SWIFT_PS1_RESET_COLOR}"

  # Suffix
  [[ -n "${SWIFT_PS1_SUFFIX}" ]] && SWIFT_PS1+="${SWIFT_PS1_SUFFIX}"

  # Close Background color if defined
  [[ -n "${SWIFT_PS1_BG_COLOR}" ]] && SWIFT_PS1+="${_SWIFT_PS1_OPEN_ESC}${_SWIFT_PS1_DEFAULT_BG}${_SWIFT_PS1_CLOSE_ESC}"

  echo "${SWIFT_PS1} "
}
